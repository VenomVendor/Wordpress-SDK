apply plugin: 'jacoco'

jacoco {
    toolVersion = '0.7.9'
}

android {
    testOptions {
        unitTests.all {
            jacoco {
                includeNoLocationClasses = true
            }
        }
    }
}

task jacocoTestReport(type: JacocoReport,
        dependsOn: ['testDebugUnitTest', 'createDebugCoverageReport']) {

    reports {
        xml.enabled = true
        html.enabled = true
    }

    def excludedClasses = [
            '**/*Test*.*',
            '**/network/request/**/*',
            '**/network/response/**/*',
            '**/R.class',
            '**/R$*.class',
            '**/*$ViewInjector*.*',
            '**/*$ViewBinder*.*',
            '**/Manifest*.*',
            '**/android/**/*.*',
            '**/BuildConfig.*'
    ]
    def debugTree = fileTree(dir: "$project.buildDir/intermediates/classes/debug",
            excludes: excludedClasses)
    def mainSrc = "$project.projectDir/src/main/java"

    sourceDirectories = files([mainSrc])
    classDirectories = files([debugTree])
    executionData = fileTree(dir: project.buildDir, includes: [
            'jacoco/testDebugUnitTest.exec', 'outputs/code-coverage/connected/*coverage.ec'
    ])
}
